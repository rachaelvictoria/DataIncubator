source('~/data scientist class/Data Incubator/Degree DataBase/Degree_Data.R')
source('~/data scientist class/Data Incubator/Degree DataBase/Degree_Data.R')
names(raw_data)
?colnames
source('~/data scientist class/Data Incubator/Degree DataBase/Degree_Data.R')
names(raw_data)
levels(raw_data$race)
raw_data$race[1]
raw_data$race$[1]
raw_data$race
levels(raw_data$degree)
levels(raw_data$major)
source('~/data scientist class/Data Incubator/Degree DataBase/Degree_Data.R')
head(bach_data)
levels(raw_data$school)
raw_data$school[[1]]
raw_data$school[[1,1]]
raw_data$school[1,1]
source('~/data scientist class/Data Incubator/Degree DataBase/Degree_Data.R')
head(clean_data)
?xpathSApply
??xpathSApply
source('~/data scientist class/Data Incubator/Degree DataBase/xml_test.R')
source('~/data scientist class/Data Incubator/Degree DataBase/xml_test.R')
source('~/data scientist class/Data Incubator/Degree DataBase/xml_test.R')
source('~/data scientist class/Data Incubator/Degree DataBase/xml_test.R')
source('~/data scientist class/Data Incubator/Degree DataBase/xml_test.R')
source('~/data scientist class/Data Incubator/Degree DataBase/xml_test.R')
source('~/data scientist class/Data Incubator/Degree DataBase/xml_test.R')
source('~/data scientist class/Data Incubator/Degree DataBase/xml_test.R')
source('~/data scientist class/Data Incubator/Degree DataBase/xml_test.R')
class(doc4)
source('~/data scientist class/Data Incubator/Degree DataBase/xml_test.R')
source('~/data scientist class/Data Incubator/Degree DataBase/xml_test.R')
class(doc5)
xmlRoot(doc45)
xmlRoot(doc5)
head(doc5)
class(doc5)
levels(doc5)
source('~/data scientist class/Data Incubator/Degree DataBase/xml_test.R')
names(table)
table[[1]]
source('~/data scientist class/Data Incubator/Degree DataBase/xml_test.R')
table[[1]]
source('~/data scientist class/Data Incubator/Degree DataBase/US News and Review Table.R')
source('~/data scientist class/Data Incubator/Degree DataBase/Degree_Data.R')
names(bach_data)
levels(bach_data$school)
levels(bach_data$degree)
levels(bach_data$major)
levels(bach_data$year)
bach_data$year
source('~/data scientist class/Data Incubator/Degree DataBase/Degree_Data.R')
head(raw_data_numeric, 10)
head(raw_data_numeric)
head(raw_data_numeric, 1)
head(raw_data_numeric, 2)
head(raw_data_numeric, 3)
tail(raw_data_numeric, 3)
blah <- data.frame(c(1,2,3,4,5), c(2, 3, 5,6, 1), c(12, 12, 12, 12, 12))
blah
names(blah)
colnames(blah) <- c("A", "B", "C")
blah
names(blah)
blah$A
blah$B
head(total, 10)
blah
blah <- blah[order(blah$B),]
blah
blah <- blah[order(blah$A),]
blah
?order
blah <- blah[order(-blah$A),]
blah
?subset
blah1 <- subset(blah, blah$A > 2 & blah$B < 5)
blah1
blah1 <- subset(blah, blah$A > 1 & blah$B < 6)
blah1
source('~/data scientist class/Data Incubator/Degree DataBase/Degree_Data.R')
total
head(total, 10)
names(total)
total_for_plot <- subset(total, c(total$school, total[,4], total[,5], total[,6], total[,7], total[,8], total[,9]))
total_for_plot <- data.frame(c(total[,1], total[,4]))
total_for_plot
head(total_for_plot, 5)
names(total)
total_for_plot <- data.frame(c(total[,1], total[,4]))
head(total_for_plot)
?data.frame
total_for_plot <- data.frame(total[,1], total[,4])
head(total_for_plot)
names(total)
total_for_plot <- data.frame(School = total[,1], Total = total[,4], Black = total[,5], Native = total[,6], AsianPI = total[,7], Hispanic = total[,8], White = total[,9])
head(total_for_plot)
names(total_for_plot)
?rownames
rownames(total_for_plot, total_for_plot[,1])
total_for_plot[,1]
names <- total_for_plot[,1]
names
rownames(total_for_plot, names)
names(total_for_plot)
total_for_plot
head(total_for_plot)
rownames(total_for_plot)
rownames(total_for_plot)<- names
rownames(total_for_plot)
total_for_plot
total_for_plot <- data.frame(Total = total[,4], Black = total[,5], Native = total[,6], AsianPI = total[,7], Hispanic = total[,8], White = total[,9])
head(tota_for_plot)
head(total_for_plot)
rownames(total_for_plot)<- names
rownames(total_for_plot)
head(total_for_plot)
head(total)
barplot(tota_for_plot)
barplot(total_for_plot)
class(total_for_plot)
barplot(as.matrix(total_for_plot))
?barplot
nrow(total_for_plot)
abbrv_total_for_plot <- total_for_plot[1:10,]
abbrv_total_for_plot
mymat <- as.matrix(abbv_total_for_plot)
mymat <- as.matrix(abbrv_total_for_plot)
mymat_t <- t(mymat)
barplot(mymat_t)
mymat_t
barplot(mymat_t, names.arg = names)
names
barplot(mymat_t, names.arg = names[1:10])
names[1:10]
nrow(names[1:10])
length(names[1:10])
names(abbrv_total_for_plot)
rownames(abbrv_total_for_plot)
names <- rownames(abbrv_total_for_plot)
barplot(mymat_t, names.arg = names)
?barplot
barplot(mymat_t, names.arg = names, horiz = TRUE)
barplot(mymat_t, horiz = TRUE, names.arg = names)
barplot(mymat_t, horiz = TRUE)
barplot(mymat_t, horiz = TRUE, names.arg = names)
barplot(mymat_t, horiz = TRUE)
names_1 <- c("U of Phoenix", "Penn State", "Texas A&M", "U of Florida", "Ohio State", "Purdue", "U of I - UC", "U of W - Seattle", "U of T - Austin", "Michigan State")
barplot(mymat_t, horiz = TRUE, names.arg = names_1)
barplot(mymat_t, horiz = TRUE, names.arg = names_1, las = 1)
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1)
par(mai = c(1, 10, 1, 1))
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1)
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1)
par(mai = c(1, 5, 1, 1))
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1)
?col
?colors
demo("colors")
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1)
names(mymat_t)
names(abbrv_total_for_plot)
colors
colors1
colors1 <- c("black", "blue", "green", "purple", "grey","red" )
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1, col = colors1)
mymat_t
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1, col = colors1, besides = TRUE)
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1, col = colors1, beside = TRUE)
dat <- read.table(text = "A   B
+ 1 1 4
+ 2 2 3
+ 3 3 2
+ 4 4 1", header = TRUE)
barplot(as.matrix(dat))
dat <- read.table(text = "A B
1 1 4
2 2 3
3 3 2
4 4 1", header = TRUE)
dat
dat$A
dat$B
dat[,1]
dat[,2]
barplot(dat)
barplot(as.matrix(dat))
install.packages("ggplot2")
?ggplot
??ggplot
library(ggplot)
library(ggplot2)
?ggplot
ggplot(mymat_t)
ggplot(as.dataframe(mymat_t))
ggplot(as.data.frame(mymat_t))
?ggplot
as.data.frame(mymat_t)
?melt
test3 <- as.data.frame(mymat_t)
names(test3)
melted <- melt(test3, id = names(test3))
library(reshape)
install.packages("reshape2")
library(reshape)
library(reshape2)
install.packages("reshape")
library(reshape)
melted <- melt(test3, id = names(test3))
melted
print(ggplot(melted, aes(x = names(test3), y = value, fill = variable)) + geom_bar(stat = "identity", alpha = .3))
?aes
print(ggplot(melted, aes(x = names(test3), y = value, fill = variable)) + geom_bar(stat = "identity", alpha = .3))
library(ggplot)
library(ggplot2)
print(ggplot(melted, aes(x = names(test3), y = value, fill = variable)) + geom_bar(stat = "identity", alpha = .3))
source('~/data scientist class/Data Incubator/Degree DataBase/ggplot_test.R')
?value
install.packages("reshape2")
source('~/data scientist class/Data Incubator/Degree DataBase/ggplot_test.R')
install.packages("ggplot2")
install.packages("reshape")
install.packages("reshape2")
source('~/data scientist class/Data Incubator/Degree DataBase/ggplot_test.R')
?value
source('~/data scientist class/Data Incubator/Degree DataBase/Degree_Data.R')
source('~/data scientist class/Data Incubator/Degree DataBase/Degree_Data.R')
source('~/data scientist class/Data Incubator/Degree DataBase/Degree_Data.R')
names
abbrv_total_for_plot
total[1:10,]
total[1:10,1:10]
total[1:10,1]
source('~/data scientist class/Data Incubator/Degree DataBase/Degree_Data.R')
?barplot
?position
??position
source('~/data scientist class/Data Incubator/Degree DataBase/ggplot_test.R')
test3 <- as.data.frame(mymat_t)
test3
melted <- melt(test3, id = "names")
source('~/data scientist class/Data Incubator/Degree DataBase/Degree_Data.R')
melted <- melt(test3, id = names)
melted
print(ggplot(melted, aes(x = x, y = value, fill = variable))+geom_bar(stat = "identity", alpha = 0.3))
source('~/data scientist class/Data Incubator/Degree DataBase/ggplot_test.R')
melted1 <- melt(test3, id = names)
source('~/data scientist class/Data Incubator/Degree DataBase/Degree_Data.R')
?barplot
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1, col = plot_colors)
plot_colors <- c("blue", "green", "yellow", "purple", "red")
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1, col = plot_colors)
?barplot
names(total_for_plot)
plot_colors <- c("blue", "green", "yellow", "purple", "red")
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1, col = plot_colors, legend = names(total_for_plot))
plot_colors <- c("blue", "green", "yellow", "purple", "red")
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1, col = plot_colors, legend = names(total_for_plot))
plot_colors <- c("blue", "green", "yellow", "purple", "red")
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1, col = plot_colors, legend = names(total_for_plot))
par(mar = c(1, 5, 1, 1))
plot_colors <- c("blue", "green", "yellow", "purple", "red")
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1, col = plot_colors, legend = names(total_for_plot))
plot_colors <- c("blue", "green", "yellow", "purple", "red")
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1, col = plot_colors, legend = names(total_for_plot))
par(mar = c(1, 10, 1, 1))
plot_colors <- c("blue", "green", "yellow", "purple", "red")
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1, col = plot_colors, legend = names(total_for_plot))
par(mar = c(1, 15, 1, 1))
plot_colors <- c("blue", "green", "yellow", "purple", "red")
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1, col = plot_colors, legend = names(total_for_plot))
par(mar = c(5, 15, 1, 1))
plot_colors <- c("blue", "green", "yellow", "purple", "red")
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1, col = plot_colors, legend = names(total_for_plot))
par(mar = c(5, 20, 1, 1))
plot_colors <- c("blue", "green", "yellow", "purple", "red")
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1, col = plot_colors, legend = names(total_for_plot))
source('~/data scientist class/Data Incubator/Degree DataBase/Degree_Data.R')
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1, col = plot_colors, legend = names(total_for_plot))
par(mar = c(5, 20, 1, 1))
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1, col = plot_colors, legend = names(total_for_plot))
source('~/data scientist class/Data Incubator/Degree DataBase/Degree_Data.R')
source('~/data scientist class/Data Incubator/Degree DataBase/Degree_Data.R')
source('~/data scientist class/Data Incubator/Degree DataBase/Degree_Data.R')
raw_data <- read.csv("Degree_Data_By_Race.csv", header = TRUE, stringsAsFactors = FALSE)
names(raw_data)
lapply(raw_data, class)
names(raw_data[,11])
colname(raw_data[,11])
colnames(raw_data[,11])
raw_data$Zip
head(raw_data$Zip)
names(raw_data)
raw_data[1,]
raw_data <- read.csv("Degree_Data_By_Race.csv", header = TRUE, stringsAsFactors = FALSE)
names(raw_data)
head(raw_data[,11])
source('~/data scientist class/Data Incubator/Degree DataBase/Zip Addition Test.R')
raw_data$zip
third_set
head(raw_data_numeric, 1)
source('~/data scientist class/Data Incubator/Degree DataBase/Zip Addition Test.R')
head(raw_data_numeric, 1)
head(bach_data, 1)
source('~/data scientist class/Data Incubator/Degree DataBase/Degree_Data.R')
names(Num_deg)
source('~/data scientist class/Data Incubator/Degree DataBase/Degree_Data.R')
head(total, 1)
names(total)
total <- total[order(-total[,5]),]
total_for_plot <- data.frame(Black = total[,6]/total[,5], Native = total[,7]/total[,5], AsianPI = total[,8]/total[,5], Hispanic = total[,9]/total[,5], White = total[,10]/total[,5])
abbrv_total_for_plot <- total_for_plot[1:10,]
names <- total[1:10,1]
rownames(abbrv_total_for_plot)<- names
mymat <- as.matrix(abbrv_total_for_plot)
mymat_t <- t(mymat)
par(mar = c(5, 20, 1, 1))
plot_colors <- c("dark blue", "green", "red", "purple", "light blue")
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1, col = plot_colors, legend = names(total_for_plot))
#NOTE: STILL need to figure out how to use ggplot2 to overlay the values
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1, col = plot_colors, legend = names(total_for_plot))
par(mar = c(5, 20, 1, 1))
plot_colors <- c("dark blue", "green", "red", "purple", "light blue")
barplot(mymat_t, horiz = TRUE, names.arg = names, las = 1, col = plot_colors, legend = names(total_for_plot))
install.packages("acs")
?acs
?do.call
?rbind.data.frame
?do.call
?rbind.data.frame
?do.call
?mean
names(total)
class(total$city)
class(total[,city])
total[,city]
total[, "city"]
class(total[,"city"])
?do.call
?mean
?object
?data.frame
